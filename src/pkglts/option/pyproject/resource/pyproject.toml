
# Completed from:
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
# - https://setuptools.pypa.io/en/latest/userguide/datafiles.html

# {# pkglts, pyproject
[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools", "wheel"]  # , "setuptools-scm"]  # PEP 508 specifications.
build-backend = "setuptools.build_meta"  # we don't know if we need it

[project]
# Mandatory keys
name="{{ base.pkg_full_name }}"
version="{{ version.major }}.{{ version.minor }}.{{ version.post }}"

# Optional keys
authors=[
    {name = "{{ base.authors[0][0] }}", email = "{{ base.authors[0][1] }}"},
]
{% if 'pypi' is available %}
classifiers=[
    {%- for kwd in pypi.auto_classifiers %}
    "{{ kwd }}",
    {%- endfor %}
]
{% endif -%}
dependencies=[
    {% for dep in reqs.requirements('install') -%}
    {% if dep.is_pip(strict=False) -%}
    "{{ dep.fmt_pip_requirement() }}",
    {% endif -%}
    {%- endfor %}
]
description="{{ doc.description }}"
dynamic=["readme"]  # to specify which keys are not mentioned in static and are defined dynamically
keywords=['{{ doc.keywords|join(", ") }}']
license={text = "{{ license.name }}"}
maintainers=[]  # Could be filled from AUTHORS.rst
requires-python=">=3.6"  # ??

[project.urls]
documentation = "www.google.fr"
repository = "{{ pysetup.pkg_url }}"

[tool.setuptools.dynamic]
readme={file = ["README.rst", "HISTORY.rst"]}

[tool.setuptools]
include-package-data=true  # not mandatory as it is the default value
#packages=""  # we may have to use the [tool.setuptools.packages.find] above mentioned, and if so...
#package_dir={'': 'src'}  # ... we won't need to define package_dir :)
#package_data=""  # THE biggest problem to solve ^^


# All the following is in Beta
[tool.setuptools.packages.find]
where=["src"]  # list of folders that contain the packages (["."] by default)
# include=["my_package*"]  # package names should match these glob patterns (["*"] by default)
# exclude=["my_package.tests*"]  # exclude packages matching these glob patterns (empty by default)
# namespaces=false  # to disable scanning PEP 420 namespaces (true by default)

[tool.setuptools.package-data]
"*" = ['*.json', '*.ini', '*.csv', '*.rst', '*.svg', '*.xlsx', '*.xls']  # at least I try ^^
# #}
