# {# pkglts, pyproject.build
[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools", "wheel"]  # , "setuptools-scm"]  # PEP 508 specifications.
build-backend = "setuptools.build_meta"  # we don't know if we need it
# #}

# {# pkglts, pyproject.project
[project]  # https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "{{ base.pkg_full_name }}"
version = "{{ version.major }}.{{ version.minor }}.{{ version.post }}"
description = "{{ doc.description }}"
readme = "README.{{ doc.fmt }}"
{% if pyproject.py_min_ver == pyproject.py_max_ver -%}
requires-python = "== {{ pyproject.py_min_ver }}"
{% else -%}
requires-python = ">= {{ pyproject.py_min_ver }}"
{% endif -%}
license = {text = "{{ license.name }}"}
authors = [
    {%- for author in base.authors %}
    {name = "{{ author[0] }}", email = "{{ author[1] }}"},
    {%- endfor %}
]
{% if 'git' is available -%}
maintainers = [
    {%- for contrib in git.contributors %}
    {name = "{{ contrib[0] }}", email = "{{ contrib[1] }}"},
    {%- endfor %}
]
{%- else -%}
maintainers = []
{%- endif %}
keywords = [
    {%- for keyword in doc.keywords %}
    {{ keyword }},
    {%- endfor %}
]
{% if 'pypi' is available -%}
classifiers = [
    {%- for kwd in pypi.auto_classifiers %}
    "{{ kwd }}",
    {%- endfor %}
]
{% endif -%}
dependencies = [
    {%- for dep in reqs.requirements('install') %}
    {% if dep.is_pip(strict=False) -%}"{{ dep.fmt_pip_requirement() }}", {% endif -%}
    {%- endfor %}
]

[project.optional-dependencies]
{% for intent in reqs.intents() -%}
{% if intent != 'install' -%}
{{ intent }} = [
    {%- for dep in reqs.requirements(intent) %}
    {% if dep.is_pip(strict=False) -%}"{{ dep.fmt_pip_requirement() }}",{% endif -%}
    {%- endfor %}
]
{% endif -%}
{%- endfor %}

[project.urls]
{%- for name, url in pyproject.urls.items() %}
{{ name }} = {{ url }}
{%- endfor %}
{% for badge in doc.badges -%}
{{ badge.name }} = {{ badge.url }}
{% endfor %}

[tool.setuptools]
{% if 'data' is available -%}
include-package-data = true
{% else -%}
include-package-data = false
{% endif %}
[tool.setuptools.packages.find]
where = ["src"]

{% if 'data' is available -%}
[tool.setuptools.package-data]
"*" = [{% for file_ext in data.filetype %}'*{{ file_ext }}', {% endfor %}]
{% endif %}
# #}

# {# pkglts, pyproject.scripts
[project.scripts]
# #}

# {# pkglts, pyproject.gui_scripts
[project.gui-scripts]
# #}

# {# pkglts, pyproject.entry_points
[project.entry-points]
# #}

